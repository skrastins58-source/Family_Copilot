name: CI Golden Tests
on:
  pull_request:
    branches: [ main, master, develop ]
    
    paths:
      - "lib/**"
      - "test/golden/**"
      - "goldens/**"
      - "scripts/**"
      - ".github/workflows/ci-golden.yml"
      - "pubspec.yaml"
      
  push:
    branches: [ main, master, develop ]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

jobs:
  golden:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.35.4
      
      - name: Fetch default branch safely
        run: |
          echo "Fetching default branch: ${{ github.event.repository.default_branch }}"
          git fetch --no-tags --prune --depth=1 origin \
            ${{ github.event.repository.default_branch }}:refs/remotes/origin/${{ github.event.repository.default_branch }}

      - name: Install dependencies
        run: flutter pub get

      - name: Validate golden structure
        run: bash scripts/validate_golden_structure.sh

      - name: Run golden test
        run: flutter test --update-goldens test/golden/golden_notification_preview.dart

      - name: Check golden diff
        run: bash scripts/check_golden_diff.sh ${{ github.event.repository.default_branch }}

      - name: Upload golden artifact
        id: upload-artifact
        uses: actions/upload-artifact@v4
        with:
          name: notification_preview
          path: goldens/notification_preview.png

      - name: Determine NOTIF_IMAGE_STATUS
        run: |
          if [ -f goldens/notification_preview.png ]; then
            echo "NOTIF_IMAGE_STATUS=success" >> $GITHUB_ENV
          else
            echo "NOTIF_IMAGE_STATUS=fail" >> $GITHUB_ENV
          fi

      - name: Generate PR comment
        if: github.event_name == 'pull_request'

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          if [ -f scripts/post-pr-summary.js ]; then
            node scripts/post-pr-summary.js
          else
            echo "PR summary script not found, skipping..."
          fi

        run: node scripts/post-pr-summary.js
        env:
          GOLDEN_ARTIFACT_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          NOTIF_IMAGE_STATUS: ${{ env.NOTIF_IMAGE_STATUS }}
          CI_COVERAGE_SUMMARY: ${{ steps.coverage.outputs.summary || '' }}

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        run: gh pr comment ${{ github.event.pull_request.number }} --body-file pr-comment.md
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

