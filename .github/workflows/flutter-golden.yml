---
name: Flutter Golden Tests

on:
  pull_request:
    branches: [main, master, develop]
  push:
    branches: [main, master, develop]
  workflow_dispatch:

jobs:
  golden-tests:
    name: Golden Tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0'

      - name: Install dependencies
        run: flutter pub get

      - name: Verify dependencies
        run: flutter pub deps

      - name: Analyze code
        run: flutter analyze

      - name: Check formatting
        run: dart format --output=none --set-exit-if-changed .

      - name: Run unit tests with coverage
        run: |
          flutter test --coverage --test-randomize-ordering-seed=random \
            2>&1 | tee flutter_test.log
        continue-on-error: true

      - name: Check coverage thresholds
        run: bash ./scripts/check_coverage.sh
        continue-on-error: true

      - name: Run golden tests
        run: |
          flutter test test/widget_test.dart 2>&1 | tee -a flutter_test.log
        continue-on-error: true

      - name: Upload coverage reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            coverage/
            coverage_results.env
            flutter_test.log

      - name: Upload golden test failures
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: golden-test-failures
          path: |
            test/failures/
            goldens/
            flutter_test.log

      - name: Comment PR on failure
        if: always() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const script = require('./scripts/pr-comment.js')
            await script({github, context, core})
